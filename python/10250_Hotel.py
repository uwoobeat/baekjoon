'''
BOJ 10250, Hotel
'''

'''
시작 전 풀이 과정 설계

T는 데이터의 개수를 의미한다.
따라서 방 번호를 구하는 과정을 T만큼 반복해야 한다.
근데 HWN은 T번 주어지므로 각각의 HWN에 대하여 T개의 리스트를 생성해야 한다.

1. T를 입력받는다
2. T줄의 H,W,N 데이터를 입력받는다.
3-1. 입력받은 HWN 데이터를 T개의 리스트 H, W, N에 할당해준다
    
    1) for 문을 이용한다 -> T번만큼 리스트 추가 명령을 반복한다. 이게 맞는 것 같기도...
    2) while 문을 이용한다 -> 잘 모르겠다...
    3) list.append()를 이용한다 -> 괜찮은 것 같음
    
3-2. 아니면 [H, W, N]으로 받아주고 나중에 split()같은 걸 활용해서 나눠주는 것도 괜찮은듯?
3-3. 그냥 [H,W,N]으로 나눠줄 필요 없이 H T N를 문자열 그대로 받아서 리스트에 넣어주고, 나중에 int, split 처리해주자.

-> 3-3이 가장 쉽다. 저번에 배웠던 for 문으로 input() 함수를 T번 반복해주면 된다!

4. HWN 리스트의 첫번째 요소를 추출하여 split()으로 나눠주고, 세 덩어리를 각각 H, W, N 리스트에 할당해주자.
단, 요소값들이 추가되는 것이므로 .append()를 사용해야 할 것 같다. 

5. 나머지와 몫 연산자를 활용하여 방의 위치를 특정하고, 방번호 설정 규칙에 맞게 위치를 선언한다.

5. T개의 방 번호를 출력한다. 단, 줄바꿈 기호 포함되어야 함

'''

T = int(input()) #T를 입력받는다

HWN = [input() for _ in range(T)] #리스트에 테스트 데이터를 T번 입력받는다

#요소들을 분할하여 할당하기 전 빈 리스트를 만든다.
#regroup은 '6 12 10'과 같이 입력받은 값을 ['6','10','12'] 로 나눠주고, H,W.N에 배분하기 전 거쳐가게 해주는 역할을 한다.

regroup = [] 
H = []
W = []
N = []

for x in range(T): #아래 문장을 T회 반복한다. x는 반복 횟수 - 1이다.
    regroup = HWN[x].split() #HWN의 x+1번째 요소를 가져와 분할하여 regroup의 요소로 할당한다. 이 때 정수로 바꿔준다.
    H.append(int(regroup[0])) #regroup의 첫번째 요소는 H이므로 H 리스트에 이를 추가한다. W, N도 마찬가지.
    W.append(int(regroup[1]))
    N.append(int(regroup[2])) #일일히 int로 지정하는 것보다 map()을 써서 int로 바꿔주는게 좋은데... 뭔가 안된다.

print(H, W, N, T, regroup)

'''
이제 시작이다. 방 번호를 설정하는 규칙을 설계해보자.

세로 H, 가로 W이고 N번째다.

1. N을 먼저 H로 나눈다. 나머지가 층 수를 결정한다. 몫은 호실을 결정한다.

가령 6 12 10이라면 10%6=4층 10//6=1, 1+1=2호 -> 402호
30 50 72라면 72%30=12층 72//30=2, 1+2=3호 ->1203호

2. 나머지가 0인 경우 0층이 아니라 최고층이다.
    -이 경우 몫은 정수로 다음 열로 넘어가지 않으므로, 몫+1이 아니라 몫을 그대로 가져간다.
    
이에 따라 스크립트를 작성해보자.
'''
    
numRoom = []

for x in range(T):
    if N[x]%H[x] == 0 : #N이 H로 나눠떨어지면 최상층
        front = str(H[x]) #앞 두자리는 H
        back = str(N[x] // H[x]) #뒷 두자리는 해당 층에서 호실 순서
        if int(back) >= 10: #뒷 두자리가 두 자리 수이면 그대로, 한 자리 수이면 앞에 0 붙이기
            numRoom.append(front + back)
        else:
            numRoom.append(front + "0" + back)
    else:
        front = str(N[x] % H[x]) #앞 두자리는 층수이고 N을 H로 나눈 나머지
        back = str(N[x] // H[x] + 1)
        if int(back) >= 10:
            numRoom.append(front + back)
        else:
            numRoom.append(front + "0" + back)
    
for i in numRoom:
    print(i)
